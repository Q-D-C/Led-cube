

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 19 15:52:58 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	psect	text13,local,class=CODE,merge=1,delta=2
    21                           	psect	text14,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F1829 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  0111                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011A                     	;# 
   120  011B                     	;# 
   121  011D                     	;# 
   122  011E                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018E                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  020D                     	;# 
   145  020E                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0219                     	;# 
   162  021A                     	;# 
   163  021B                     	;# 
   164  021C                     	;# 
   165  021D                     	;# 
   166  021E                     	;# 
   167  021F                     	;# 
   168  0291                     	;# 
   169  0291                     	;# 
   170  0292                     	;# 
   171  0293                     	;# 
   172  0294                     	;# 
   173  0295                     	;# 
   174  0295                     	;# 
   175  0296                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  029B                     	;# 
   181  029C                     	;# 
   182  029D                     	;# 
   183  029E                     	;# 
   184  0311                     	;# 
   185  0311                     	;# 
   186  0312                     	;# 
   187  0313                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  038C                     	;# 
   193  038D                     	;# 
   194  038E                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  039A                     	;# 
   202  039C                     	;# 
   203  039D                     	;# 
   204  039E                     	;# 
   205  039F                     	;# 
   206  0415                     	;# 
   207  0416                     	;# 
   208  0417                     	;# 
   209  041C                     	;# 
   210  041D                     	;# 
   211  041E                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  0111                     	;# 
   275  0112                     	;# 
   276  0113                     	;# 
   277  0114                     	;# 
   278  0115                     	;# 
   279  0116                     	;# 
   280  0117                     	;# 
   281  0118                     	;# 
   282  0119                     	;# 
   283  011A                     	;# 
   284  011B                     	;# 
   285  011D                     	;# 
   286  011E                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  018E                     	;# 
   290  0191                     	;# 
   291  0191                     	;# 
   292  0192                     	;# 
   293  0193                     	;# 
   294  0193                     	;# 
   295  0193                     	;# 
   296  0194                     	;# 
   297  0195                     	;# 
   298  0196                     	;# 
   299  0199                     	;# 
   300  019A                     	;# 
   301  019B                     	;# 
   302  019B                     	;# 
   303  019C                     	;# 
   304  019D                     	;# 
   305  019E                     	;# 
   306  019F                     	;# 
   307  020C                     	;# 
   308  020D                     	;# 
   309  020E                     	;# 
   310  0211                     	;# 
   311  0211                     	;# 
   312  0212                     	;# 
   313  0212                     	;# 
   314  0213                     	;# 
   315  0213                     	;# 
   316  0214                     	;# 
   317  0214                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0215                     	;# 
   321  0216                     	;# 
   322  0216                     	;# 
   323  0217                     	;# 
   324  0217                     	;# 
   325  0219                     	;# 
   326  021A                     	;# 
   327  021B                     	;# 
   328  021C                     	;# 
   329  021D                     	;# 
   330  021E                     	;# 
   331  021F                     	;# 
   332  0291                     	;# 
   333  0291                     	;# 
   334  0292                     	;# 
   335  0293                     	;# 
   336  0294                     	;# 
   337  0295                     	;# 
   338  0295                     	;# 
   339  0296                     	;# 
   340  0298                     	;# 
   341  0298                     	;# 
   342  0299                     	;# 
   343  029A                     	;# 
   344  029B                     	;# 
   345  029C                     	;# 
   346  029D                     	;# 
   347  029E                     	;# 
   348  0311                     	;# 
   349  0311                     	;# 
   350  0312                     	;# 
   351  0313                     	;# 
   352  0318                     	;# 
   353  0318                     	;# 
   354  0319                     	;# 
   355  031A                     	;# 
   356  038C                     	;# 
   357  038D                     	;# 
   358  038E                     	;# 
   359  0391                     	;# 
   360  0392                     	;# 
   361  0393                     	;# 
   362  0394                     	;# 
   363  0395                     	;# 
   364  0396                     	;# 
   365  039A                     	;# 
   366  039C                     	;# 
   367  039D                     	;# 
   368  039E                     	;# 
   369  039F                     	;# 
   370  0415                     	;# 
   371  0416                     	;# 
   372  0417                     	;# 
   373  041C                     	;# 
   374  041D                     	;# 
   375  041E                     	;# 
   376  0FE4                     	;# 
   377  0FE5                     	;# 
   378  0FE6                     	;# 
   379  0FE7                     	;# 
   380  0FE8                     	;# 
   381  0FE9                     	;# 
   382  0FEA                     	;# 
   383  0FEB                     	;# 
   384  0FED                     	;# 
   385  0FEE                     	;# 
   386  0FEF                     	;# 
   387  0099                     _OSCCON	set	153
   388  046F                     _TRISB7	set	1135
   389  046E                     _TRISB6	set	1134
   390  046D                     _TRISB5	set	1133
   391  046C                     _TRISB4	set	1132
   392  0477                     _TRISC7	set	1143
   393  0476                     _TRISC6	set	1142
   394  0475                     _TRISC5	set	1141
   395  0474                     _TRISC4	set	1140
   396  010E                     _LATCbits	set	270
   397  010D                     _LATBbits	set	269
   398                           
   399                           	psect	cinit
   400  07F4                     start_initialization:	
   401                           ; #config settings
   402                           
   403  07F4                     __initialization:
   404                           
   405                           ; Clear objects allocated to BANK0
   406  07F4  0020               	movlb	0	; select bank0
   407  07F5  01A0               	clrf	__pbssBANK0& (0+127)
   408  07F6  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   409  07F7  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   410  07F8  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   411  07F9  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   412  07FA  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   413  07FB  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   414  07FC  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   415  07FD                     end_of_initialization:	
   416                           ;End of C runtime variable initialization code
   417                           
   418  07FD                     __end_of__initialization:
   419  07FD  0020               	movlb	0
   420  07FE  3187  2F96         	ljmp	_main	;jump to C main() function
   421                           
   422                           	psect	bssBANK0
   423  0020                     __pbssBANK0:
   424  0020                     _layer:
   425  0020                     	ds	8
   426                           
   427                           	psect	cstackCOMMON
   428  0070                     __pcstackCOMMON:
   429  0070                     ?_SetLayers:
   430  0070                     ?_ClearLayers:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_turnOffLayers:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_turnOffLayers:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_turnOnLayer:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_turnOnAllLayers:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_turnOnAllLayers:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_clock_signal:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ??_clock_signal:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_latch_enable:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ??_latch_enable:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_send_data:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_empty:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_empty:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_voor:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_achter:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_op:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_neer:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_init:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ??_init:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_main:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     SetLayers@value:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     turnOnLayer@x:	
   494                           ; 2 bytes @ 0x0
   495                           
   496  0070                     send_data@data_out:	
   497                           ; 2 bytes @ 0x0
   498                           
   499                           
   500                           ; 2 bytes @ 0x0
   501  0070                     	ds	2
   502  0072                     ??_SetLayers:
   503  0072                     ??_ClearLayers:	
   504                           ; 1 bytes @ 0x2
   505                           
   506  0072                     ??_turnOnLayer:	
   507                           ; 1 bytes @ 0x2
   508                           
   509  0072                     ??_send_data:	
   510                           ; 1 bytes @ 0x2
   511                           
   512                           
   513                           ; 1 bytes @ 0x2
   514  0072                     	ds	3
   515  0075                     send_data@i:
   516                           
   517                           ; 2 bytes @ 0x5
   518  0075                     	ds	2
   519  0077                     ??_voor:
   520  0077                     ??_achter:	
   521                           ; 1 bytes @ 0x7
   522                           
   523  0077                     ??_op:	
   524                           ; 1 bytes @ 0x7
   525                           
   526  0077                     ??_neer:	
   527                           ; 1 bytes @ 0x7
   528                           
   529                           
   530                           ; 1 bytes @ 0x7
   531  0077                     	ds	1
   532  0078                     ??_main:
   533                           
   534                           ; 1 bytes @ 0x8
   535  0078                     	ds	1
   536  0079                     main@i:
   537                           
   538                           ; 2 bytes @ 0x9
   539  0079                     	ds	2
   540  007B                     main@i_126:
   541                           
   542                           ; 2 bytes @ 0xB
   543  007B                     	ds	2
   544                           
   545                           	psect	maintext
   546  0796                     __pmaintext:	
   547 ;;
   548 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   549 ;;
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 195 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  i               2   11[COMMON] int 
   557 ;;  i               2    9[COMMON] int 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : B1F/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   568 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   570 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   571 ;;Total ram usage:        5 bytes
   572 ;; Hardware stack levels required when called: 3
   573 ;; This function calls:
   574 ;;		_achter
   575 ;;		_empty
   576 ;;		_init
   577 ;;		_neer
   578 ;;		_op
   579 ;;		_voor
   580 ;; This function is called by:
   581 ;;		Startup code after reset
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585                           
   586                           ;psect for function _main
   587  0796                     _main:
   588  0796                     l1010:	
   589                           ;incstack = 0
   590                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   591                           
   592                           
   593                           ;main.c: 197:  init();
   594  0796  3185  25C4  3187   	fcall	_init
   595  0799                     l79:	
   596                           ;main.c: 198:  while (1) {
   597                           
   598                           
   599                           ;main.c: 199:   empty();
   600  0799  3185  25D2  3187   	fcall	_empty
   601  079C                     l1012:
   602                           
   603                           ;main.c: 200:   for (int i = 0; i < 5; i++) {
   604  079C  01F9               	clrf	main@i
   605  079D  01FA               	clrf	main@i+1
   606  079E                     l1018:
   607                           
   608                           ;main.c: 201:    op();
   609  079E  3186  2697  3187   	fcall	_op
   610  07A1                     l1020:
   611                           
   612                           ;main.c: 202:    _delay((unsigned long)((100)*(500000/4000.0)));
   613  07A1  3011               	movlw	17
   614  07A2  00F8               	movwf	??_main
   615  07A3  303A               	movlw	58
   616  07A4                     u177:
   617  07A4  0B89               	decfsz	9,f
   618  07A5  2FA4               	goto	u177
   619  07A6  0BF8               	decfsz	??_main,f
   620  07A7  2FA4               	goto	u177
   621  07A8  3200               	nop2
   622  07A9                     l1022:
   623                           
   624                           ;main.c: 203:    neer();
   625  07A9  3186  2646  3187   	fcall	_neer
   626                           
   627                           ;main.c: 204:    _delay((unsigned long)((100)*(500000/4000.0)));
   628  07AC  3011               	movlw	17
   629  07AD  00F8               	movwf	??_main
   630  07AE  303A               	movlw	58
   631  07AF                     u187:
   632  07AF  0B89               	decfsz	9,f
   633  07B0  2FAF               	goto	u187
   634  07B1  0BF8               	decfsz	??_main,f
   635  07B2  2FAF               	goto	u187
   636  07B3  3200               	nop2
   637                           
   638                           ;main.c: 205:   }
   639  07B4  3001               	movlw	1
   640  07B5  07F9               	addwf	main@i,f
   641  07B6  3000               	movlw	0
   642  07B7  3DFA               	addwfc	main@i+1,f
   643  07B8  087A               	movf	main@i+1,w
   644  07B9  3A80               	xorlw	128
   645  07BA  00F8               	movwf	??_main
   646  07BB  3080               	movlw	128
   647  07BC  0278               	subwf	??_main,w
   648  07BD  1D03               	skipz
   649  07BE  2FC1               	goto	u155
   650  07BF  3005               	movlw	5
   651  07C0  0279               	subwf	main@i,w
   652  07C1                     u155:
   653  07C1  1C03               	skipc
   654  07C2  2FC4               	goto	u151
   655  07C3  2FC5               	goto	u150
   656  07C4                     u151:
   657  07C4  2F9E               	goto	l1018
   658  07C5                     u150:
   659  07C5                     l1024:
   660                           
   661                           ;main.c: 206:   empty();
   662  07C5  3185  25D2  3187   	fcall	_empty
   663  07C8                     l1026:
   664                           
   665                           ;main.c: 207:   for (int i = 0; i < 5; i++) {
   666  07C8  01FB               	clrf	main@i_126
   667  07C9  01FC               	clrf	main@i_126+1
   668  07CA                     l1032:
   669                           
   670                           ;main.c: 208:    voor();
   671  07CA  3187  273F  3187   	fcall	_voor
   672  07CD                     l1034:
   673                           
   674                           ;main.c: 209:    _delay((unsigned long)((100)*(500000/4000.0)));
   675  07CD  3011               	movlw	17
   676  07CE  00F8               	movwf	??_main
   677  07CF  303A               	movlw	58
   678  07D0                     u197:
   679  07D0  0B89               	decfsz	9,f
   680  07D1  2FD0               	goto	u197
   681  07D2  0BF8               	decfsz	??_main,f
   682  07D3  2FD0               	goto	u197
   683  07D4  3200               	nop2
   684  07D5                     l1036:
   685                           
   686                           ;main.c: 210:    achter();
   687  07D5  3186  26E8  3187   	fcall	_achter
   688                           
   689                           ;main.c: 211:    _delay((unsigned long)((100)*(500000/4000.0)));
   690  07D8  3011               	movlw	17
   691  07D9  00F8               	movwf	??_main
   692  07DA  303A               	movlw	58
   693  07DB                     u207:
   694  07DB  0B89               	decfsz	9,f
   695  07DC  2FDB               	goto	u207
   696  07DD  0BF8               	decfsz	??_main,f
   697  07DE  2FDB               	goto	u207
   698  07DF  3200               	nop2
   699                           
   700                           ;main.c: 212:   }
   701  07E0  3001               	movlw	1
   702  07E1  07FB               	addwf	main@i_126,f
   703  07E2  3000               	movlw	0
   704  07E3  3DFC               	addwfc	main@i_126+1,f
   705  07E4  087C               	movf	main@i_126+1,w
   706  07E5  3A80               	xorlw	128
   707  07E6  00F8               	movwf	??_main
   708  07E7  3080               	movlw	128
   709  07E8  0278               	subwf	??_main,w
   710  07E9  1D03               	skipz
   711  07EA  2FED               	goto	u165
   712  07EB  3005               	movlw	5
   713  07EC  027B               	subwf	main@i_126,w
   714  07ED                     u165:
   715  07ED  1C03               	skipc
   716  07EE  2FF0               	goto	u161
   717  07EF  2FF1               	goto	u160
   718  07F0                     u161:
   719  07F0  2FCA               	goto	l1032
   720  07F1                     u160:
   721  07F1  2F99               	goto	l79
   722  07F2  3180  2802         	ljmp	start
   723  07F4                     __end_of_main:
   724                           
   725                           	psect	text1
   726  073F                     __ptext1:	
   727 ;; *************** function _voor *****************
   728 ;; Defined at:
   729 ;;		line 110 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   747 ;;Total ram usage:        1 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 2
   750 ;; This function calls:
   751 ;;		_ClearLayers
   752 ;;		_send_data
   753 ;;		_turnOnAllLayers
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _voor
   761  073F                     _voor:
   762  073F                     l938:	
   763                           ;incstack = 0
   764                           ; Regs used in _voor: [wreg+status,2+status,0+pclath+cstack]
   765                           
   766                           
   767                           ;main.c: 112:  ClearLayers();
   768  073F  3185  25A7  3187   	fcall	_ClearLayers
   769  0742                     l940:
   770                           
   771                           ;main.c: 113:  layer[0] = 0b0000000010001000;
   772  0742  3088               	movlw	136
   773  0743  0020               	movlb	0	; select bank0
   774  0744  00A0               	movwf	_layer
   775  0745  3000               	movlw	0
   776  0746  00A1               	movwf	_layer+1
   777  0747                     l942:
   778                           
   779                           ;main.c: 114:  layer[1] = 0b0000000001000100;
   780  0747  3044               	movlw	68
   781  0748  00A2               	movwf	_layer+2
   782  0749  3000               	movlw	0
   783  074A  00A3               	movwf	_layer+3
   784  074B                     l944:
   785                           
   786                           ;main.c: 115:  layer[2] = 0b0000000000100010;
   787  074B  3022               	movlw	34
   788  074C  00A4               	movwf	_layer+4
   789  074D  3000               	movlw	0
   790  074E  00A5               	movwf	_layer+5
   791  074F                     l946:
   792                           
   793                           ;main.c: 116:  layer[3] = 0b0000000000010001;
   794  074F  3011               	movlw	17
   795  0750  00A6               	movwf	_layer+6
   796  0751  3000               	movlw	0
   797  0752  00A7               	movwf	_layer+7
   798                           
   799                           ;main.c: 117:  send_data(layer[0]);
   800  0753  0821               	movf	_layer+1,w
   801  0754  00F1               	movwf	send_data@data_out+1
   802  0755  0820               	movf	_layer,w
   803  0756  00F0               	movwf	send_data@data_out
   804  0757  3186  2616  3187   	fcall	_send_data
   805  075A                     l948:
   806                           
   807                           ;main.c: 118:  turnOnAllLayers();
   808  075A  3185  259B  3187   	fcall	_turnOnAllLayers
   809                           
   810                           ;main.c: 119:  _delay((unsigned long)((100)*(500000/4000.0)));
   811  075D  3011               	movlw	17
   812  075E  00F7               	movwf	??_voor
   813  075F  303A               	movlw	58
   814  0760                     u217:
   815  0760  0B89               	decfsz	9,f
   816  0761  2F60               	goto	u217
   817  0762  0BF7               	decfsz	??_voor,f
   818  0763  2F60               	goto	u217
   819  0764  3200               	nop2
   820  0765                     l950:
   821                           
   822                           ;main.c: 120:  send_data(layer[1]);
   823  0765  0020               	movlb	0	; select bank0
   824  0766  0823               	movf	_layer+3,w
   825  0767  00F1               	movwf	send_data@data_out+1
   826  0768  0822               	movf	_layer+2,w
   827  0769  00F0               	movwf	send_data@data_out
   828  076A  3186  2616  3187   	fcall	_send_data
   829  076D                     l952:
   830                           
   831                           ;main.c: 121:  _delay((unsigned long)((100)*(500000/4000.0)));
   832  076D  3011               	movlw	17
   833  076E  00F7               	movwf	??_voor
   834  076F  303A               	movlw	58
   835  0770                     u227:
   836  0770  0B89               	decfsz	9,f
   837  0771  2F70               	goto	u227
   838  0772  0BF7               	decfsz	??_voor,f
   839  0773  2F70               	goto	u227
   840  0774  3200               	nop2
   841                           
   842                           ;main.c: 122:  send_data(layer[2]);
   843  0775  0020               	movlb	0	; select bank0
   844  0776  0825               	movf	_layer+5,w
   845  0777  00F1               	movwf	send_data@data_out+1
   846  0778  0824               	movf	_layer+4,w
   847  0779  00F0               	movwf	send_data@data_out
   848  077A  3186  2616  3187   	fcall	_send_data
   849  077D                     l954:
   850                           
   851                           ;main.c: 123:  _delay((unsigned long)((100)*(500000/4000.0)));
   852  077D  3011               	movlw	17
   853  077E  00F7               	movwf	??_voor
   854  077F  303A               	movlw	58
   855  0780                     u237:
   856  0780  0B89               	decfsz	9,f
   857  0781  2F80               	goto	u237
   858  0782  0BF7               	decfsz	??_voor,f
   859  0783  2F80               	goto	u237
   860  0784  3200               	nop2
   861  0785                     l956:
   862                           
   863                           ;main.c: 124:  send_data(layer[3]);
   864  0785  0020               	movlb	0	; select bank0
   865  0786  0827               	movf	_layer+7,w
   866  0787  00F1               	movwf	send_data@data_out+1
   867  0788  0826               	movf	_layer+6,w
   868  0789  00F0               	movwf	send_data@data_out
   869  078A  3186  2616  3187   	fcall	_send_data
   870                           
   871                           ;main.c: 125:  _delay((unsigned long)((100)*(500000/4000.0)));
   872  078D  3011               	movlw	17
   873  078E  00F7               	movwf	??_voor
   874  078F  303A               	movlw	58
   875  0790                     u247:
   876  0790  0B89               	decfsz	9,f
   877  0791  2F90               	goto	u247
   878  0792  0BF7               	decfsz	??_voor,f
   879  0793  2F90               	goto	u247
   880  0794  3200               	nop2
   881  0795                     l62:
   882  0795  0008               	return
   883  0796                     __end_of_voor:
   884                           
   885                           	psect	text2
   886  0697                     __ptext2:	
   887 ;; *************** function _op *****************
   888 ;; Defined at:
   889 ;;		line 146 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   905 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   906 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;Total ram usage:        1 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 2
   910 ;; This function calls:
   911 ;;		_send_data
   912 ;;		_turnOffLayers
   913 ;;		_turnOnLayer
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _op
   921  0697                     _op:
   922  0697                     l978:	
   923                           ;incstack = 0
   924                           ; Regs used in _op: [wreg+status,2+status,0+pclath+cstack]
   925                           
   926                           
   927                           ;main.c: 148:  layer[0] = 0b1111111111111111;
   928  0697  30FF               	movlw	255
   929  0698  0020               	movlb	0	; select bank0
   930  0699  00A0               	movwf	_layer
   931  069A  30FF               	movlw	255
   932  069B  00A1               	movwf	_layer+1
   933  069C                     l980:
   934                           
   935                           ;main.c: 149:  send_data(layer[0]);
   936  069C  0821               	movf	_layer+1,w
   937  069D  00F1               	movwf	send_data@data_out+1
   938  069E  0820               	movf	_layer,w
   939  069F  00F0               	movwf	send_data@data_out
   940  06A0  3186  2616  3186   	fcall	_send_data
   941  06A3                     l982:
   942                           
   943                           ;main.c: 150:  turnOnLayer(0);
   944  06A3  3000               	movlw	0
   945  06A4  00F0               	movwf	turnOnLayer@x
   946  06A5  00F1               	movwf	turnOnLayer@x+1
   947  06A6  3185  25F3  3186   	fcall	_turnOnLayer
   948                           
   949                           ;main.c: 151:  _delay((unsigned long)((100)*(500000/4000.0)));
   950  06A9  3011               	movlw	17
   951  06AA  00F7               	movwf	??_op
   952  06AB  303A               	movlw	58
   953  06AC                     u257:
   954  06AC  0B89               	decfsz	9,f
   955  06AD  2EAC               	goto	u257
   956  06AE  0BF7               	decfsz	??_op,f
   957  06AF  2EAC               	goto	u257
   958  06B0  3200               	nop2
   959  06B1                     l984:
   960                           
   961                           ;main.c: 152:  turnOffLayers();
   962  06B1  3185  25A1  3186   	fcall	_turnOffLayers
   963                           
   964                           ;main.c: 153:  turnOnLayer(1);
   965  06B4  3001               	movlw	1
   966  06B5  00F0               	movwf	turnOnLayer@x
   967  06B6  3000               	movlw	0
   968  06B7  00F1               	movwf	turnOnLayer@x+1
   969  06B8  3185  25F3  3186   	fcall	_turnOnLayer
   970  06BB                     l986:
   971                           
   972                           ;main.c: 154:  _delay((unsigned long)((100)*(500000/4000.0)));
   973  06BB  3011               	movlw	17
   974  06BC  00F7               	movwf	??_op
   975  06BD  303A               	movlw	58
   976  06BE                     u267:
   977  06BE  0B89               	decfsz	9,f
   978  06BF  2EBE               	goto	u267
   979  06C0  0BF7               	decfsz	??_op,f
   980  06C1  2EBE               	goto	u267
   981  06C2  3200               	nop2
   982                           
   983                           ;main.c: 155:  turnOffLayers();
   984  06C3  3185  25A1  3186   	fcall	_turnOffLayers
   985  06C6                     l988:
   986                           
   987                           ;main.c: 156:  turnOnLayer(2);
   988  06C6  3002               	movlw	2
   989  06C7  00F0               	movwf	turnOnLayer@x
   990  06C8  3000               	movlw	0
   991  06C9  00F1               	movwf	turnOnLayer@x+1
   992  06CA  3185  25F3  3186   	fcall	_turnOnLayer
   993                           
   994                           ;main.c: 157:  _delay((unsigned long)((100)*(500000/4000.0)));
   995  06CD  3011               	movlw	17
   996  06CE  00F7               	movwf	??_op
   997  06CF  303A               	movlw	58
   998  06D0                     u277:
   999  06D0  0B89               	decfsz	9,f
  1000  06D1  2ED0               	goto	u277
  1001  06D2  0BF7               	decfsz	??_op,f
  1002  06D3  2ED0               	goto	u277
  1003  06D4  3200               	nop2
  1004  06D5                     l990:
  1005                           
  1006                           ;main.c: 158:  turnOffLayers();
  1007  06D5  3185  25A1  3186   	fcall	_turnOffLayers
  1008                           
  1009                           ;main.c: 159:  turnOnLayer(3);
  1010  06D8  3003               	movlw	3
  1011  06D9  00F0               	movwf	turnOnLayer@x
  1012  06DA  3000               	movlw	0
  1013  06DB  00F1               	movwf	turnOnLayer@x+1
  1014  06DC  3185  25F3  3186   	fcall	_turnOnLayer
  1015  06DF                     l992:
  1016                           
  1017                           ;main.c: 160:  _delay((unsigned long)((100)*(500000/4000.0)));
  1018  06DF  3011               	movlw	17
  1019  06E0  00F7               	movwf	??_op
  1020  06E1  303A               	movlw	58
  1021  06E2                     u287:
  1022  06E2  0B89               	decfsz	9,f
  1023  06E3  2EE2               	goto	u287
  1024  06E4  0BF7               	decfsz	??_op,f
  1025  06E5  2EE2               	goto	u287
  1026  06E6  3200               	nop2
  1027  06E7                     l68:
  1028  06E7  0008               	return
  1029  06E8                     __end_of_op:
  1030                           
  1031                           	psect	text3
  1032  0646                     __ptext3:	
  1033 ;; *************** function _neer *****************
  1034 ;; Defined at:
  1035 ;;		line 163 in file "main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1053 ;;Total ram usage:        1 bytes
  1054 ;; Hardware stack levels used: 1
  1055 ;; Hardware stack levels required when called: 2
  1056 ;; This function calls:
  1057 ;;		_send_data
  1058 ;;		_turnOffLayers
  1059 ;;		_turnOnLayer
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _neer
  1067  0646                     _neer:
  1068  0646                     l994:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _neer: [wreg+status,2+status,0+pclath+cstack]
  1071                           
  1072                           
  1073                           ;main.c: 165:  layer[0] = 0b1111111111111111;
  1074  0646  30FF               	movlw	255
  1075  0647  0020               	movlb	0	; select bank0
  1076  0648  00A0               	movwf	_layer
  1077  0649  30FF               	movlw	255
  1078  064A  00A1               	movwf	_layer+1
  1079  064B                     l996:
  1080                           
  1081                           ;main.c: 166:  send_data(layer[0]);
  1082  064B  0821               	movf	_layer+1,w
  1083  064C  00F1               	movwf	send_data@data_out+1
  1084  064D  0820               	movf	_layer,w
  1085  064E  00F0               	movwf	send_data@data_out
  1086  064F  3186  2616  3186   	fcall	_send_data
  1087  0652                     l998:
  1088                           
  1089                           ;main.c: 167:  turnOnLayer(3);
  1090  0652  3003               	movlw	3
  1091  0653  00F0               	movwf	turnOnLayer@x
  1092  0654  3000               	movlw	0
  1093  0655  00F1               	movwf	turnOnLayer@x+1
  1094  0656  3185  25F3  3186   	fcall	_turnOnLayer
  1095                           
  1096                           ;main.c: 168:  _delay((unsigned long)((100)*(500000/4000.0)));
  1097  0659  3011               	movlw	17
  1098  065A  00F7               	movwf	??_neer
  1099  065B  303A               	movlw	58
  1100  065C                     u297:
  1101  065C  0B89               	decfsz	9,f
  1102  065D  2E5C               	goto	u297
  1103  065E  0BF7               	decfsz	??_neer,f
  1104  065F  2E5C               	goto	u297
  1105  0660  3200               	nop2
  1106  0661                     l1000:
  1107                           
  1108                           ;main.c: 169:  turnOffLayers();
  1109  0661  3185  25A1  3186   	fcall	_turnOffLayers
  1110                           
  1111                           ;main.c: 170:  turnOnLayer(2);
  1112  0664  3002               	movlw	2
  1113  0665  00F0               	movwf	turnOnLayer@x
  1114  0666  3000               	movlw	0
  1115  0667  00F1               	movwf	turnOnLayer@x+1
  1116  0668  3185  25F3  3186   	fcall	_turnOnLayer
  1117  066B                     l1002:
  1118                           
  1119                           ;main.c: 171:  _delay((unsigned long)((100)*(500000/4000.0)));
  1120  066B  3011               	movlw	17
  1121  066C  00F7               	movwf	??_neer
  1122  066D  303A               	movlw	58
  1123  066E                     u307:
  1124  066E  0B89               	decfsz	9,f
  1125  066F  2E6E               	goto	u307
  1126  0670  0BF7               	decfsz	??_neer,f
  1127  0671  2E6E               	goto	u307
  1128  0672  3200               	nop2
  1129                           
  1130                           ;main.c: 172:  turnOffLayers();
  1131  0673  3185  25A1  3186   	fcall	_turnOffLayers
  1132  0676                     l1004:
  1133                           
  1134                           ;main.c: 173:  turnOnLayer(1);
  1135  0676  3001               	movlw	1
  1136  0677  00F0               	movwf	turnOnLayer@x
  1137  0678  3000               	movlw	0
  1138  0679  00F1               	movwf	turnOnLayer@x+1
  1139  067A  3185  25F3  3186   	fcall	_turnOnLayer
  1140                           
  1141                           ;main.c: 174:  _delay((unsigned long)((100)*(500000/4000.0)));
  1142  067D  3011               	movlw	17
  1143  067E  00F7               	movwf	??_neer
  1144  067F  303A               	movlw	58
  1145  0680                     u317:
  1146  0680  0B89               	decfsz	9,f
  1147  0681  2E80               	goto	u317
  1148  0682  0BF7               	decfsz	??_neer,f
  1149  0683  2E80               	goto	u317
  1150  0684  3200               	nop2
  1151  0685                     l1006:
  1152                           
  1153                           ;main.c: 175:  turnOffLayers();
  1154  0685  3185  25A1  3186   	fcall	_turnOffLayers
  1155                           
  1156                           ;main.c: 176:  turnOnLayer(0);
  1157  0688  3000               	movlw	0
  1158  0689  00F0               	movwf	turnOnLayer@x
  1159  068A  00F1               	movwf	turnOnLayer@x+1
  1160  068B  3185  25F3  3186   	fcall	_turnOnLayer
  1161  068E                     l1008:
  1162                           
  1163                           ;main.c: 177:  _delay((unsigned long)((100)*(500000/4000.0)));
  1164  068E  3011               	movlw	17
  1165  068F  00F7               	movwf	??_neer
  1166  0690  303A               	movlw	58
  1167  0691                     u327:
  1168  0691  0B89               	decfsz	9,f
  1169  0692  2E91               	goto	u327
  1170  0693  0BF7               	decfsz	??_neer,f
  1171  0694  2E91               	goto	u327
  1172  0695  3200               	nop2
  1173  0696                     l71:
  1174  0696  0008               	return
  1175  0697                     __end_of_neer:
  1176                           
  1177                           	psect	text4
  1178  05F3                     __ptext4:	
  1179 ;; *************** function _turnOnLayer *****************
  1180 ;; Defined at:
  1181 ;;		line 51 in file "main.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  x               2    0[COMMON] int 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1199 ;;Total ram usage:        2 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_op
  1205 ;;		_neer
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _turnOnLayer
  1211  05F3                     _turnOnLayer:
  1212  05F3                     l894:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _turnOnLayer: [wreg+status,2+status,0]
  1215                           
  1216                           
  1217                           ;main.c: 51: void turnOnLayer(int x);main.c: 52: {;main.c: 53:  if (x == 0) {
  1218  05F3  0870               	movf	turnOnLayer@x,w
  1219  05F4  0471               	iorwf	turnOnLayer@x+1,w
  1220  05F5  1D03               	btfss	3,2
  1221  05F6  2DF8               	goto	u91
  1222  05F7  2DF9               	goto	u90
  1223  05F8                     u91:
  1224  05F8  2DFB               	goto	l898
  1225  05F9                     u90:
  1226  05F9                     l896:
  1227                           
  1228                           ;main.c: 54:   LATBbits.LATB4 = HIGH;
  1229  05F9  0022               	movlb	2	; select bank2
  1230  05FA  160D               	bsf	13,4	;volatile
  1231  05FB                     l898:
  1232                           
  1233                           ;main.c: 56:  if (x == 1) {
  1234  05FB  0370               	decf	turnOnLayer@x,w
  1235  05FC  0471               	iorwf	turnOnLayer@x+1,w
  1236  05FD  1D03               	btfss	3,2
  1237  05FE  2E00               	goto	u101
  1238  05FF  2E01               	goto	u100
  1239  0600                     u101:
  1240  0600  2E03               	goto	l902
  1241  0601                     u100:
  1242  0601                     l900:
  1243                           
  1244                           ;main.c: 57:   LATBbits.LATB5 = HIGH;
  1245  0601  0022               	movlb	2	; select bank2
  1246  0602  168D               	bsf	13,5	;volatile
  1247  0603                     l902:
  1248                           
  1249                           ;main.c: 59:  if (x == 2) {
  1250  0603  3002               	movlw	2
  1251  0604  0670               	xorwf	turnOnLayer@x,w
  1252  0605  0471               	iorwf	turnOnLayer@x+1,w
  1253  0606  1D03               	btfss	3,2
  1254  0607  2E09               	goto	u111
  1255  0608  2E0A               	goto	u110
  1256  0609                     u111:
  1257  0609  2E0C               	goto	l906
  1258  060A                     u110:
  1259  060A                     l904:
  1260                           
  1261                           ;main.c: 60:   LATBbits.LATB6 = HIGH;
  1262  060A  0022               	movlb	2	; select bank2
  1263  060B  170D               	bsf	13,6	;volatile
  1264  060C                     l906:
  1265                           
  1266                           ;main.c: 62:  if (x == 3) {
  1267  060C  3003               	movlw	3
  1268  060D  0670               	xorwf	turnOnLayer@x,w
  1269  060E  0471               	iorwf	turnOnLayer@x+1,w
  1270  060F  1D03               	btfss	3,2
  1271  0610  2E12               	goto	u121
  1272  0611  2E13               	goto	u120
  1273  0612                     u121:
  1274  0612  2E15               	goto	l42
  1275  0613                     u120:
  1276  0613                     l908:
  1277                           
  1278                           ;main.c: 63:   LATBbits.LATB7 = HIGH;
  1279  0613  0022               	movlb	2	; select bank2
  1280  0614  178D               	bsf	13,7	;volatile
  1281  0615                     l42:
  1282  0615  0008               	return
  1283  0616                     __end_of_turnOnLayer:
  1284                           
  1285                           	psect	text5
  1286  05C4                     __ptext5:	
  1287 ;; *************** function _init *****************
  1288 ;; Defined at:
  1289 ;;		line 180 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           
  1317                           ;psect for function _init
  1318  05C4                     _init:
  1319  05C4                     l828:	
  1320                           ;incstack = 0
  1321                           ; Regs used in _init: [wreg]
  1322                           
  1323                           
  1324                           ;main.c: 182:  OSCCON = 0b00111000;
  1325  05C4  3038               	movlw	56
  1326  05C5  0021               	movlb	1	; select bank1
  1327  05C6  0099               	movwf	25	;volatile
  1328  05C7                     l830:
  1329                           
  1330                           ;main.c: 183:  TRISC4 = 0;
  1331  05C7  120E               	bcf	14,4	;volatile
  1332  05C8                     l832:
  1333                           
  1334                           ;main.c: 184:  TRISC5 = 0;
  1335  05C8  128E               	bcf	14,5	;volatile
  1336  05C9                     l834:
  1337                           
  1338                           ;main.c: 185:  TRISC6 = 0;
  1339  05C9  130E               	bcf	14,6	;volatile
  1340  05CA                     l836:
  1341                           
  1342                           ;main.c: 186:  TRISC7 = 0;
  1343  05CA  138E               	bcf	14,7	;volatile
  1344  05CB                     l838:
  1345                           
  1346                           ;main.c: 187:  TRISB4 = 0;
  1347  05CB  120D               	bcf	13,4	;volatile
  1348  05CC                     l840:
  1349                           
  1350                           ;main.c: 188:  TRISB5 = 0;
  1351  05CC  128D               	bcf	13,5	;volatile
  1352  05CD                     l842:
  1353                           
  1354                           ;main.c: 189:  TRISB6 = 0;
  1355  05CD  130D               	bcf	13,6	;volatile
  1356  05CE                     l844:
  1357                           
  1358                           ;main.c: 190:  TRISB7 = 0;
  1359  05CE  138D               	bcf	13,7	;volatile
  1360  05CF                     l846:
  1361                           
  1362                           ;main.c: 191:  LATCbits.LATC7 = HIGH;
  1363  05CF  0022               	movlb	2	; select bank2
  1364  05D0  178E               	bsf	14,7	;volatile
  1365  05D1                     l74:
  1366  05D1  0008               	return
  1367  05D2                     __end_of_init:
  1368                           
  1369                           	psect	text6
  1370  05D2                     __ptext6:	
  1371 ;; *************** function _empty *****************
  1372 ;; Defined at:
  1373 ;;		line 100 in file "main.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 1
  1394 ;; This function calls:
  1395 ;;		_turnOffLayers
  1396 ;;		_turnOnAllLayers
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _empty
  1404  05D2                     _empty:
  1405  05D2                     l928:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _empty: [wreg+status,2+status,0+pclath+cstack]
  1408                           
  1409                           
  1410                           ;main.c: 102:  LATCbits.LATC7 = LOW;
  1411  05D2  0022               	movlb	2	; select bank2
  1412  05D3  138E               	bcf	14,7	;volatile
  1413  05D4                     l930:
  1414                           
  1415                           ;main.c: 103:  turnOnAllLayers();
  1416  05D4  3185  259B  3185   	fcall	_turnOnAllLayers
  1417  05D7                     l932:
  1418                           
  1419                           ;main.c: 104:  _delay((unsigned long)((10)*(500000/4000.0)));
  1420  05D7  30FA               	movlw	250
  1421  05D8                     u337:
  1422  05D8  3200               	nop2
  1423  05D9  0B89               	decfsz	9,f
  1424  05DA  2DD8               	goto	u337
  1425  05DB                     l934:
  1426                           
  1427                           ;main.c: 105:  turnOffLayers();
  1428  05DB  3185  25A1  3185   	fcall	_turnOffLayers
  1429  05DE                     l936:
  1430                           
  1431                           ;main.c: 106:  LATCbits.LATC7 = HIGH;
  1432  05DE  0022               	movlb	2	; select bank2
  1433  05DF  178E               	bsf	14,7	;volatile
  1434  05E0                     l59:
  1435  05E0  0008               	return
  1436  05E1                     __end_of_empty:
  1437                           
  1438                           	psect	text7
  1439  05A1                     __ptext7:	
  1440 ;; *************** function _turnOffLayers *****************
  1441 ;; Defined at:
  1442 ;;		line 43 in file "main.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		None
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_empty
  1466 ;;		_op
  1467 ;;		_neer
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _turnOffLayers
  1473  05A1                     _turnOffLayers:
  1474  05A1                     l892:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _turnOffLayers: []
  1477                           
  1478                           
  1479                           ;main.c: 45:  LATBbits.LATB4 = LOW;
  1480  05A1  0022               	movlb	2	; select bank2
  1481  05A2  120D               	bcf	13,4	;volatile
  1482                           
  1483                           ;main.c: 46:  LATBbits.LATB5 = LOW;
  1484  05A3  128D               	bcf	13,5	;volatile
  1485                           
  1486                           ;main.c: 47:  LATBbits.LATB6 = LOW;
  1487  05A4  130D               	bcf	13,6	;volatile
  1488                           
  1489                           ;main.c: 48:  LATBbits.LATB7 = LOW;
  1490  05A5  138D               	bcf	13,7	;volatile
  1491  05A6                     l35:
  1492  05A6  0008               	return
  1493  05A7                     __end_of_turnOffLayers:
  1494                           
  1495                           	psect	text8
  1496  06E8                     __ptext8:	
  1497 ;; *************** function _achter *****************
  1498 ;; Defined at:
  1499 ;;		line 128 in file "main.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, pclath, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1517 ;;Total ram usage:        1 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 2
  1520 ;; This function calls:
  1521 ;;		_ClearLayers
  1522 ;;		_send_data
  1523 ;;		_turnOnAllLayers
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _achter
  1531  06E8                     _achter:
  1532  06E8                     l958:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _achter: [wreg+status,2+status,0+pclath+cstack]
  1535                           
  1536                           
  1537                           ;main.c: 130:  ClearLayers();
  1538  06E8  3185  25A7  3186   	fcall	_ClearLayers
  1539  06EB                     l960:
  1540                           
  1541                           ;main.c: 131:  layer[0] = 0b0000000010001000;
  1542  06EB  3088               	movlw	136
  1543  06EC  0020               	movlb	0	; select bank0
  1544  06ED  00A0               	movwf	_layer
  1545  06EE  3000               	movlw	0
  1546  06EF  00A1               	movwf	_layer+1
  1547  06F0                     l962:
  1548                           
  1549                           ;main.c: 132:  layer[1] = 0b0000000001000100;
  1550  06F0  3044               	movlw	68
  1551  06F1  00A2               	movwf	_layer+2
  1552  06F2  3000               	movlw	0
  1553  06F3  00A3               	movwf	_layer+3
  1554  06F4                     l964:
  1555                           
  1556                           ;main.c: 133:  layer[2] = 0b0000000000100010;
  1557  06F4  3022               	movlw	34
  1558  06F5  00A4               	movwf	_layer+4
  1559  06F6  3000               	movlw	0
  1560  06F7  00A5               	movwf	_layer+5
  1561  06F8                     l966:
  1562                           
  1563                           ;main.c: 134:  layer[3] = 0b0000000000010001;
  1564  06F8  3011               	movlw	17
  1565  06F9  00A6               	movwf	_layer+6
  1566  06FA  3000               	movlw	0
  1567  06FB  00A7               	movwf	_layer+7
  1568                           
  1569                           ;main.c: 135:  send_data(layer[3]);
  1570  06FC  0827               	movf	_layer+7,w
  1571  06FD  00F1               	movwf	send_data@data_out+1
  1572  06FE  0826               	movf	_layer+6,w
  1573  06FF  00F0               	movwf	send_data@data_out
  1574  0700  3186  2616  3186   	fcall	_send_data
  1575  0703                     l968:
  1576                           
  1577                           ;main.c: 136:  turnOnAllLayers();
  1578  0703  3185  259B  3186   	fcall	_turnOnAllLayers
  1579                           
  1580                           ;main.c: 137:  _delay((unsigned long)((100)*(500000/4000.0)));
  1581  0706  3011               	movlw	17
  1582  0707  00F7               	movwf	??_achter
  1583  0708  303A               	movlw	58
  1584  0709                     u347:
  1585  0709  0B89               	decfsz	9,f
  1586  070A  2F09               	goto	u347
  1587  070B  0BF7               	decfsz	??_achter,f
  1588  070C  2F09               	goto	u347
  1589  070D  3200               	nop2
  1590  070E                     l970:
  1591                           
  1592                           ;main.c: 138:  send_data(layer[2]);
  1593  070E  0020               	movlb	0	; select bank0
  1594  070F  0825               	movf	_layer+5,w
  1595  0710  00F1               	movwf	send_data@data_out+1
  1596  0711  0824               	movf	_layer+4,w
  1597  0712  00F0               	movwf	send_data@data_out
  1598  0713  3186  2616  3186   	fcall	_send_data
  1599  0716                     l972:
  1600                           
  1601                           ;main.c: 139:  _delay((unsigned long)((100)*(500000/4000.0)));
  1602  0716  3011               	movlw	17
  1603  0717  00F7               	movwf	??_achter
  1604  0718  303A               	movlw	58
  1605  0719                     u357:
  1606  0719  0B89               	decfsz	9,f
  1607  071A  2F19               	goto	u357
  1608  071B  0BF7               	decfsz	??_achter,f
  1609  071C  2F19               	goto	u357
  1610  071D  3200               	nop2
  1611                           
  1612                           ;main.c: 140:  send_data(layer[1]);
  1613  071E  0020               	movlb	0	; select bank0
  1614  071F  0823               	movf	_layer+3,w
  1615  0720  00F1               	movwf	send_data@data_out+1
  1616  0721  0822               	movf	_layer+2,w
  1617  0722  00F0               	movwf	send_data@data_out
  1618  0723  3186  2616  3186   	fcall	_send_data
  1619  0726                     l974:
  1620                           
  1621                           ;main.c: 141:  _delay((unsigned long)((100)*(500000/4000.0)));
  1622  0726  3011               	movlw	17
  1623  0727  00F7               	movwf	??_achter
  1624  0728  303A               	movlw	58
  1625  0729                     u367:
  1626  0729  0B89               	decfsz	9,f
  1627  072A  2F29               	goto	u367
  1628  072B  0BF7               	decfsz	??_achter,f
  1629  072C  2F29               	goto	u367
  1630  072D  3200               	nop2
  1631  072E                     l976:
  1632                           
  1633                           ;main.c: 142:  send_data(layer[0]);
  1634  072E  0020               	movlb	0	; select bank0
  1635  072F  0821               	movf	_layer+1,w
  1636  0730  00F1               	movwf	send_data@data_out+1
  1637  0731  0820               	movf	_layer,w
  1638  0732  00F0               	movwf	send_data@data_out
  1639  0733  3186  2616  3186   	fcall	_send_data
  1640                           
  1641                           ;main.c: 143:  _delay((unsigned long)((100)*(500000/4000.0)));
  1642  0736  3011               	movlw	17
  1643  0737  00F7               	movwf	??_achter
  1644  0738  303A               	movlw	58
  1645  0739                     u377:
  1646  0739  0B89               	decfsz	9,f
  1647  073A  2F39               	goto	u377
  1648  073B  0BF7               	decfsz	??_achter,f
  1649  073C  2F39               	goto	u377
  1650  073D  3200               	nop2
  1651  073E                     l65:
  1652  073E  0008               	return
  1653  073F                     __end_of_achter:
  1654                           
  1655                           	psect	text9
  1656  059B                     __ptext9:	
  1657 ;; *************** function _turnOnAllLayers *****************
  1658 ;; Defined at:
  1659 ;;		line 67 in file "main.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		None
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_empty
  1683 ;;		_voor
  1684 ;;		_achter
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _turnOnAllLayers
  1690  059B                     _turnOnAllLayers:
  1691  059B                     l910:	
  1692                           ;incstack = 0
  1693                           ; Regs used in _turnOnAllLayers: []
  1694                           
  1695                           
  1696                           ;main.c: 69:  LATBbits.LATB4 = HIGH;
  1697  059B  0022               	movlb	2	; select bank2
  1698  059C  160D               	bsf	13,4	;volatile
  1699                           
  1700                           ;main.c: 70:  LATBbits.LATB5 = HIGH;
  1701  059D  168D               	bsf	13,5	;volatile
  1702                           
  1703                           ;main.c: 71:  LATBbits.LATB6 = HIGH;
  1704  059E  170D               	bsf	13,6	;volatile
  1705                           
  1706                           ;main.c: 72:  LATBbits.LATB7 = HIGH;
  1707  059F  178D               	bsf	13,7	;volatile
  1708  05A0                     l45:
  1709  05A0  0008               	return
  1710  05A1                     __end_of_turnOnAllLayers:
  1711                           
  1712                           	psect	text10
  1713  0616                     __ptext10:	
  1714 ;; *************** function _send_data *****************
  1715 ;; Defined at:
  1716 ;;		line 90 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  data_out        2    0[COMMON] unsigned int 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  i               2    5[COMMON] int 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1733 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1734 ;;Total ram usage:        7 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 1
  1737 ;; This function calls:
  1738 ;;		_clock_signal
  1739 ;;		_latch_enable
  1740 ;; This function is called by:
  1741 ;;		_voor
  1742 ;;		_achter
  1743 ;;		_op
  1744 ;;		_neer
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _send_data
  1750  0616                     _send_data:
  1751  0616                     l912:	
  1752                           ;incstack = 0
  1753                           ; Regs used in _send_data: [wreg+status,2+status,0+pclath+cstack]
  1754                           
  1755                           
  1756                           ;main.c: 90: void send_data(unsigned int data_out);main.c: 91: {;main.c: 92:  int i;;mai
      +                          n.c: 93:  for (i = 0; i < 8; i++) {
  1757  0616  01F5               	clrf	send_data@i
  1758  0617  01F6               	clrf	send_data@i+1
  1759  0618                     l918:
  1760                           
  1761                           ;main.c: 94:   LATCbits.LATC6 = (data_out >> i) & (0x01);
  1762  0618  0871               	movf	send_data@data_out+1,w
  1763  0619  00F3               	movwf	??_send_data+1
  1764  061A  0870               	movf	send_data@data_out,w
  1765  061B  00F2               	movwf	??_send_data
  1766  061C  0A75               	incf	send_data@i,w
  1767  061D  2E20               	goto	u134
  1768  061E                     u135:
  1769  061E  36F3               	lsrf	??_send_data+1,f
  1770  061F  0CF2               	rrf	??_send_data,f
  1771  0620                     u134:
  1772  0620  0B89               	decfsz	9,f
  1773  0621  2E1E               	goto	u135
  1774  0622  0872               	movf	??_send_data,w
  1775  0623  3901               	andlw	1
  1776  0624  00F4               	movwf	??_send_data+2
  1777  0625  0EF4               	swapf	??_send_data+2,f
  1778  0626  0DF4               	rlf	??_send_data+2,f
  1779  0627  0DF4               	rlf	??_send_data+2,f
  1780  0628  0022               	movlb	2	; select bank2
  1781  0629  080E               	movf	14,w	;volatile
  1782  062A  0674               	xorwf	??_send_data+2,w
  1783  062B  39BF               	andlw	-65
  1784  062C  0674               	xorwf	??_send_data+2,w
  1785  062D  008E               	movwf	14	;volatile
  1786  062E                     l920:
  1787                           
  1788                           ;main.c: 95:   clock_signal();
  1789  062E  3185  25B7  3186   	fcall	_clock_signal
  1790  0631                     l922:
  1791                           
  1792                           ;main.c: 96:  }
  1793  0631  3001               	movlw	1
  1794  0632  07F5               	addwf	send_data@i,f
  1795  0633  3000               	movlw	0
  1796  0634  3DF6               	addwfc	send_data@i+1,f
  1797  0635                     l924:
  1798  0635  0876               	movf	send_data@i+1,w
  1799  0636  3A80               	xorlw	128
  1800  0637  00F2               	movwf	??_send_data
  1801  0638  3080               	movlw	128
  1802  0639  0272               	subwf	??_send_data,w
  1803  063A  1D03               	skipz
  1804  063B  2E3E               	goto	u145
  1805  063C  3008               	movlw	8
  1806  063D  0275               	subwf	send_data@i,w
  1807  063E                     u145:
  1808  063E  1C03               	skipc
  1809  063F  2E41               	goto	u141
  1810  0640  2E42               	goto	u140
  1811  0641                     u141:
  1812  0641  2E18               	goto	l918
  1813  0642                     u140:
  1814  0642                     l926:
  1815                           
  1816                           ;main.c: 97:  latch_enable();
  1817  0642  3185  25AE  3186   	fcall	_latch_enable
  1818  0645                     l56:
  1819  0645  0008               	return
  1820  0646                     __end_of_send_data:
  1821                           
  1822                           	psect	text11
  1823  05AE                     __ptext11:	
  1824 ;; *************** function _latch_enable *****************
  1825 ;; Defined at:
  1826 ;;		line 83 in file "main.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_send_data
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _latch_enable
  1855  05AE                     _latch_enable:
  1856  05AE                     l884:	
  1857                           ;incstack = 0
  1858                           ; Regs used in _latch_enable: [wreg]
  1859                           
  1860                           
  1861                           ;main.c: 85:  LATCbits.LATC4 = 1;
  1862  05AE  0022               	movlb	2	; select bank2
  1863  05AF  160E               	bsf	14,4	;volatile
  1864  05B0                     l886:
  1865                           
  1866                           ;main.c: 86:  _delay((unsigned long)((500)*(500000/4000000.0)));
  1867  05B0  3014               	movlw	20
  1868  05B1                     u387:
  1869  05B1  0B89               	decfsz	9,f
  1870  05B2  2DB1               	goto	u387
  1871  05B3  3200               	nop2
  1872  05B4                     l888:
  1873                           
  1874                           ;main.c: 87:  LATCbits.LATC4 = 0;
  1875  05B4  0022               	movlb	2	; select bank2
  1876  05B5  120E               	bcf	14,4	;volatile
  1877  05B6                     l51:
  1878  05B6  0008               	return
  1879  05B7                     __end_of_latch_enable:
  1880                           
  1881                           	psect	text12
  1882  05B7                     __ptext12:	
  1883 ;; *************** function _clock_signal *****************
  1884 ;; Defined at:
  1885 ;;		line 75 in file "main.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_send_data
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _clock_signal
  1914  05B7                     _clock_signal:
  1915  05B7                     l878:	
  1916                           ;incstack = 0
  1917                           ; Regs used in _clock_signal: [wreg]
  1918                           
  1919                           
  1920                           ;main.c: 77:  LATCbits.LATC5 = 1;
  1921  05B7  0022               	movlb	2	; select bank2
  1922  05B8  168E               	bsf	14,5	;volatile
  1923  05B9                     l880:
  1924                           
  1925                           ;main.c: 78:  _delay((unsigned long)((500)*(500000/4000000.0)));
  1926  05B9  3014               	movlw	20
  1927  05BA                     u397:
  1928  05BA  0B89               	decfsz	9,f
  1929  05BB  2DBA               	goto	u397
  1930  05BC  3200               	nop2
  1931  05BD                     l882:
  1932                           
  1933                           ;main.c: 79:  LATCbits.LATC5 = 0;
  1934  05BD  0022               	movlb	2	; select bank2
  1935  05BE  128E               	bcf	14,5	;volatile
  1936                           
  1937                           ;main.c: 80:  _delay((unsigned long)((500)*(500000/4000000.0)));
  1938  05BF  3014               	movlw	20
  1939  05C0                     u407:
  1940  05C0  0B89               	decfsz	9,f
  1941  05C1  2DC0               	goto	u407
  1942  05C2  3200               	nop2
  1943  05C3                     l48:
  1944  05C3  0008               	return
  1945  05C4                     __end_of_clock_signal:
  1946                           
  1947                           	psect	text13
  1948  05A7                     __ptext13:	
  1949 ;; *************** function _ClearLayers *****************
  1950 ;; Defined at:
  1951 ;;		line 38 in file "main.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 1
  1972 ;; This function calls:
  1973 ;;		_SetLayers
  1974 ;; This function is called by:
  1975 ;;		_voor
  1976 ;;		_achter
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _ClearLayers
  1982  05A7                     _ClearLayers:
  1983  05A7                     l890:	
  1984                           ;incstack = 0
  1985                           ; Regs used in _ClearLayers: [wreg+status,2+status,0+pclath+cstack]
  1986                           
  1987                           
  1988                           ;main.c: 40:  SetLayers(0);
  1989  05A7  3000               	movlw	0
  1990  05A8  00F0               	movwf	SetLayers@value
  1991  05A9  00F1               	movwf	SetLayers@value+1
  1992  05AA  3185  25E1  3185   	fcall	_SetLayers
  1993  05AD                     l32:
  1994  05AD  0008               	return
  1995  05AE                     __end_of_ClearLayers:
  1996                           
  1997                           	psect	text14
  1998  05E1                     __ptext14:	
  1999 ;; *************** function _SetLayers *****************
  2000 ;; Defined at:
  2001 ;;		line 30 in file "main.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  value           2    0[COMMON] unsigned int 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2019 ;;Total ram usage:        2 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_ClearLayers
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _SetLayers
  2030  05E1                     _SetLayers:
  2031  05E1                     l876:	
  2032                           ;incstack = 0
  2033                           ; Regs used in _SetLayers: [wreg]
  2034                           
  2035                           
  2036                           ;main.c: 30: void SetLayers(unsigned int value);main.c: 31: {;main.c: 32:  layer[0] = va
      +                          lue;
  2037  05E1  0871               	movf	SetLayers@value+1,w
  2038  05E2  0020               	movlb	0	; select bank0
  2039  05E3  00A1               	movwf	_layer+1
  2040  05E4  0870               	movf	SetLayers@value,w
  2041  05E5  00A0               	movwf	_layer
  2042                           
  2043                           ;main.c: 33:  layer[1] = value;
  2044  05E6  0871               	movf	SetLayers@value+1,w
  2045  05E7  00A3               	movwf	_layer+3
  2046  05E8  0870               	movf	SetLayers@value,w
  2047  05E9  00A2               	movwf	_layer+2
  2048                           
  2049                           ;main.c: 34:  layer[2] = value;
  2050  05EA  0871               	movf	SetLayers@value+1,w
  2051  05EB  00A5               	movwf	_layer+5
  2052  05EC  0870               	movf	SetLayers@value,w
  2053  05ED  00A4               	movwf	_layer+4
  2054                           
  2055                           ;main.c: 35:  layer[3] = value;
  2056  05EE  0871               	movf	SetLayers@value+1,w
  2057  05EF  00A7               	movwf	_layer+7
  2058  05F0  0870               	movf	SetLayers@value,w
  2059  05F1  00A6               	movwf	_layer+6
  2060  05F2                     l29:
  2061  05F2  0008               	return
  2062  05F3                     __end_of_SetLayers:
  2063  007E                     btemp	set	126	;btemp
  2064  007E                     wtemp0	set	126
  2065                           
  2066                           	psect	config
  2067                           
  2068                           ;Config register CONFIG1 @ 0x8007
  2069                           ;	Oscillator Selection
  2070                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2071                           ;	Watchdog Timer Enable
  2072                           ;	WDTE = OFF, WDT disabled
  2073                           ;	Power-up Timer Enable
  2074                           ;	PWRTE = OFF, PWRT disabled
  2075                           ;	MCLR Pin Function Select
  2076                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  2077                           ;	Flash Program Memory Code Protection
  2078                           ;	CP = OFF, Program memory code protection is disabled
  2079                           ;	Data Memory Code Protection
  2080                           ;	CPD = OFF, Data memory code protection is disabled
  2081                           ;	Brown-out Reset Enable
  2082                           ;	BOREN = ON, Brown-out Reset enabled
  2083                           ;	Clock Out Enable
  2084                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2085                           ;	Internal/External Switchover
  2086                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2087                           ;	Fail-Safe Clock Monitor Enable
  2088                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2089  8007                     	org	32775
  2090  8007  0FA4               	dw	4004
  2091                           
  2092                           ;Config register CONFIG2 @ 0x8008
  2093                           ;	Flash Memory Self-Write Protection
  2094                           ;	WRT = OFF, Write protection off
  2095                           ;	PLL Enable
  2096                           ;	PLLEN = OFF, 4x PLL disabled
  2097                           ;	Stack Overflow/Underflow Reset Enable
  2098                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2099                           ;	Brown-out Reset Voltage Selection
  2100                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  2101                           ;	Low-Voltage Programming Enable
  2102                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2103  8008                     	org	32776
  2104  8008  18FF               	dw	6399

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       8
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_achter
    _main->_neer
    _main->_op
    _main->_voor
    _voor->_send_data
    _op->_send_data
    _neer->_send_data
    _achter->_send_data
    _ClearLayers->_SetLayers

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    5212
                                              8 COMMON     5     5      0
                             _achter
                              _empty
                               _init
                               _neer
                                 _op
                               _voor
 ---------------------------------------------------------------------------------
 (1) _voor                                                 1     1      0    1014
                                              7 COMMON     1     1      0
                        _ClearLayers
                          _send_data
                    _turnOnAllLayers
 ---------------------------------------------------------------------------------
 (1) _op                                                   1     1      0    1546
                                              7 COMMON     1     1      0
                          _send_data
                      _turnOffLayers
                        _turnOnLayer
 ---------------------------------------------------------------------------------
 (1) _neer                                                 1     1      0    1546
                                              7 COMMON     1     1      0
                          _send_data
                      _turnOffLayers
                        _turnOnLayer
 ---------------------------------------------------------------------------------
 (2) _turnOnLayer                                          2     0      2     696
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _empty                                                0     0      0       0
                      _turnOffLayers
                    _turnOnAllLayers
 ---------------------------------------------------------------------------------
 (2) _turnOffLayers                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _achter                                               1     1      0    1014
                                              7 COMMON     1     1      0
                        _ClearLayers
                          _send_data
                    _turnOnAllLayers
 ---------------------------------------------------------------------------------
 (2) _turnOnAllLayers                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _send_data                                            7     5      2     850
                                              0 COMMON     7     5      2
                       _clock_signal
                       _latch_enable
 ---------------------------------------------------------------------------------
 (3) _latch_enable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clock_signal                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearLayers                                          0     0      0     164
                          _SetLayers
 ---------------------------------------------------------------------------------
 (3) _SetLayers                                            2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _achter
     _ClearLayers
       _SetLayers
     _send_data
       _clock_signal
       _latch_enable
     _turnOnAllLayers
   _empty
     _turnOffLayers
     _turnOnAllLayers
   _init
   _neer
     _send_data
     _turnOffLayers
     _turnOnLayer
   _op
     _send_data
     _turnOffLayers
     _turnOnLayer
   _voor
     _ClearLayers
     _send_data
     _turnOnAllLayers

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       8       5       10.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      15      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      15      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 19 15:52:58 2022

          ??_clock_signal 0070                        l32 05AD                        l42 0615  
                      l51 05B6                        l35 05A6                        l29 05F2  
                      l45 05A0                        l62 0795                        l71 0696  
                      l48 05C3                        l56 0645                        l65 073E  
                      l74 05D1                        l59 05E0                        l68 06E7  
                      l79 0799                        u90 05F9                        u91 05F8  
                      _op 0697                       ?_op 0070                       l900 0601  
                     l910 059B                       l830 05C7                       l902 0603  
                     l920 062E                       l912 0616                       l840 05CC  
                     l832 05C8                       l904 060A                       l922 0631  
                     l930 05D4                       l842 05CD                       l834 05C9  
                     l906 060C                       l924 0635                       l932 05D7  
                     l844 05CE                       l836 05CA                       l828 05C4  
                     l908 0613                       l940 0742                       l926 0642  
                     l918 0618                       l934 05DB                       l846 05CF  
                     l838 05CB                       l950 0765                       l942 0747  
                     l880 05B9                       l960 06EB                       l936 05DE  
                     l928 05D2                       l952 076D                       l944 074B  
                     l890 05A7                       l882 05BD                       l970 070E  
                     l962 06F0                       l954 077D                       l946 074F  
                     l938 073F                       l876 05E1                       l884 05AE  
                     l972 0716                       l964 06F4                       l892 05A1  
                     l980 069C                       l956 0785                       l948 075A  
                     l878 05B7                       l886 05B0                       l974 0726  
                     l966 06F8                       l958 06E8                       l894 05F3  
                     l990 06D5                       l982 06A3                       l888 05B4  
                     l976 072E                       l968 0703                       l896 05F9  
                     l992 06DF                       l984 06B1                       l898 05FB  
                     l994 0646                       l986 06BB                       l978 0697  
                     l996 064B                       l988 06C6                       l998 0652  
                     u100 0601                       u101 0600                       u110 060A  
                     u111 0609                       u120 0613                       u121 0612  
                     u140 0642                       u141 0641                       u134 0620  
                     u150 07C5                       u135 061E                       u207 07DB  
                     u151 07C4                       u160 07F1                       u145 063E  
                     u217 0760                       u161 07F0                       u307 066E  
                     u227 0770                       u155 07C1                       u317 0680  
                     u237 0780                       u165 07ED                       u407 05C0  
                     u327 0691                       u247 0790                       u337 05D8  
                     u257 06AC                       u177 07A4                       u347 0709  
                     u267 06BE                       u187 07AF                       u357 0719  
                     u277 06D0                       u197 07D0                       u367 0729  
                     u287 06E2                       u377 0739                       u297 065C  
                     u387 05B1                       u397 05BA                       wreg 0009  
                    ??_op 0077                      l1000 0661                      l1002 066B  
                    l1010 0796                      l1004 0676                      l1020 07A1  
                    l1012 079C                      l1006 0685                      l1022 07A9  
                    l1008 068E                      l1032 07CA                      l1024 07C5  
                    l1034 07CD                      l1026 07C8                      l1018 079E  
                    l1036 07D5                      _main 0796                      _neer 0646  
                    _init 05C4                      btemp 007E                      _voor 073F  
                    start 0002               _turnOnLayer 05F3                     ?_main 0070  
                   ?_neer 0070                     ?_init 0070                     ?_voor 0070  
           ?_latch_enable 0070                     _empty 05D2                     _layer 0020  
                   main@i 0079               _ClearLayers 05A7                     status 0003  
                   wtemp0 007E            SetLayers@value 0070           __initialization 07F4  
            __end_of_main 07F4              __end_of_neer 0697              __end_of_init 05D2  
            __end_of_voor 0796           _turnOnAllLayers 059B                    ??_main 0078  
                  ??_neer 0077                    ??_init 0070                    ??_voor 0077  
          ??_latch_enable 0070                    ?_empty 0070      __end_of_clock_signal 05C4  
                  _OSCCON 0099                    _TRISB4 046C                    _TRISB5 046D  
                  _TRISC4 0474                    _TRISB6 046E                    _TRISC5 0475  
                  _TRISB7 046F                    _TRISC6 0476                    _TRISC7 0477  
  __size_of_turnOffLayers 0006                    _achter 06E8        __size_of_SetLayers 0012  
 __end_of__initialization 07FD   __end_of_turnOnAllLayers 05A1            __pcstackCOMMON 0070  
           __end_of_empty 05E1                __end_of_op 06E8             _turnOffLayers 05A1  
                 ??_empty 0070         __end_of_SetLayers 05F3                __pbssBANK0 0020  
    __end_of_latch_enable 05B7                __pmaintext 0796                   ?_achter 0070  
            ?_turnOnLayer 0070        __size_of_send_data 0030            ?_turnOffLayers 0070  
   __size_of_clock_signal 000D              ?_ClearLayers 0070          ?_turnOnAllLayers 0070  
         __size_of_achter 0057              _clock_signal 05B7                   __ptext1 073F  
                 __ptext2 0697                   __ptext3 0646                   __ptext4 05F3  
                 __ptext5 05C4                   __ptext6 05D2                   __ptext7 05A1  
                 __ptext8 06E8                   __ptext9 059B              turnOnLayer@x 0070  
    end_of_initialization 07FD         __end_of_send_data 0646           ??_turnOffLayers 0070  
   __size_of_latch_enable 0009            __end_of_achter 073F      __size_of_turnOnLayer 0023  
            _latch_enable 05AE       start_initialization 07F4                 _SetLayers 05E1  
    __size_of_ClearLayers 0007                  ??_achter 0077                 ___latbits 0002  
              ?_SetLayers 0070         send_data@data_out 0070                send_data@i 0075  
          __size_of_empty 000F               __size_of_op 0051                  _LATBbits 010D  
                _LATCbits 010E                 _send_data 0616  __size_of_turnOnAllLayers 0006  
               main@i_126 007B               ??_SetLayers 0072                ?_send_data 0070  
   __end_of_turnOffLayers 05A7                  __ptext10 0616                  __ptext11 05AE  
                __ptext12 05B7                  __ptext13 05A7                  __ptext14 05E1  
           __size_of_main 005E             __size_of_neer 0051             __size_of_init 000E  
           __size_of_voor 0057             ??_turnOnLayer 0072         ??_turnOnAllLayers 0070  
           ??_ClearLayers 0072               ??_send_data 0072             ?_clock_signal 0070  
     __end_of_turnOnLayer 0616       __end_of_ClearLayers 05AE  
